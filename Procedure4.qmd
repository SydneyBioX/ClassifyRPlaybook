# Procedure 4

The transferability of biomarkers from one patient population to another is often difficult to fully capture. Here we present three options for first assessing and then building transferable models from gene expression data.

## Intro

### Criss-cross validate

Let's suppose you want to assess how biomarkers selected from one population relate to another. In typical fashion you may build a model on one dataset through some cross-validation strategy and then attempt to predict the outcome of the paitent population in teh other cohort. This is of course rather procedural. Hence, criss-cross validate. A technique that performs a cross validation model building procedure on one dataset or group of patients and then applies this model to the other datasets you have collected. This procedure is repeated for n datasets.

We will use the recently published PROMAD database as a quick and easy way to collect 

## Next thing

```{r}
library(ClassifyR)
library(tidyverse)

Blood_Counts <- lapply(df_list, function(y){
  y %>%
    dplyr::select(-X) %>%
    tibble::remove_rownames() %>%
    filter(!duplicated(Gene_Symbol) & !is.na(Gene_Symbol)) %>%
    tibble::column_to_rownames("Gene_Symbol")
})

int <- Reduce(intersect, lapply(Blood_Counts, rownames))
Blood_Counts <-  lapply(Blood_Counts, function(x)x[int,, drop = FALSE])
Blood_outcome <- lapply(Blood_Counts, function(x){
  factor(ifelse(grepl("Control", colnames(x)), "Control", "AR"))
})

data = list(measurements = Blood_Counts, outcome = Blood_outcome)
data$measurements = lapply(data$measurements, t)

crissCrossValidate(measurements = data$measurements, outcome = data$outcome)
```



more text
